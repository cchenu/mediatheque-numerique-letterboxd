[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mediatheque-numerique-letterboxd"
version = "2.0.0"
description = "Exporte les films présents sur le site de la Médiathèque numérique et les importe dans une liste Letterboxd"
authors = [{ name = "cchenu" }]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "attrs>=25.3.0",
    "certifi>=2025.4.26",
    "cffi>=1.17.1",
    "charset-normalizer>=3.4.2",
    "h11>=0.16.0",
    "idna>=3.10",
    "numpy>=2.3.0",
    "outcome>=1.3.0.post0",
    "pandas>=2.3.0",
    "pycparser>=2.22",
    "pysocks>=1.7.1",
    "python-dateutil>=2.9.0.post0",
    "python-dotenv>=1.1.1",
    "pytz>=2025.2",
    "requests>=2.32.3",
    "selenium>=4.34.0",
    "six>=1.17.0",
    "sniffio>=1.3.1",
    "sortedcontainers>=2.4.0",
    "trio>=0.30.0",
    "trio-websocket>=0.12.2",
    "typing-extensions>=4.14.1",
    "tzdata>=2025.2",
    "urllib3[socks]>=2.4.0",
    "websocket-client>=1.8.0",
    "wsproto>=1.2.0"
]

[project.urls]
homepage = "https://github.com/cchenu/mediatheque-numerique-letterboxd"
documentation = "https://github.com/cchenu/mediatheque-numerique-letterboxd"
repository = "https://github.com/cchenu/mediatheque-numerique-letterboxd"

[tool.ruff]
line-length = 79
target-version = "py312"
fix = false
extend-exclude = ["venv"]

[tool.ruff.lint]
unfixable = []
select = [
  "AIR", # Airflow
  "ERA", # eradicate
  "FAST", # FastAPI
  "YTT", # flake8-2020
  "ANN", # flake8-annotations
  "ASYNC", # flake8-async
  "S", # flake8-bandit
  "B", # flake8-bugbear
  "BLE", # flake8-blind-except
  "A", # flake8-builtins
  "COM", # flake8-commas
  "C4", # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "T10", # flake8-debugger
  "DJ", # flake8-django
  "EM", # flake8-errmsg
  "EXE", # flake8-executable
  "FIX", # flake8-fixme
  "INT", # flake8-gettext
  "ISC", # flake8-implicit-str-concat
  "ICN", # flake8-import-conventions
  "LOG", # flake8-logging
  "G", # flake8-logging-format
  "INP", # flake8-no-pep420
  "PIE", # flake8-pie
  "T20", # flake8-print
  "PYI", # flake8-pyi
  "PT", # flake8-pytest-style
  "Q", # flake8-quotes
  "RSE", # flake8-raise
  "RET", # flake8-return
  "SLF", # flake8-self
  "SIM", # flake8-simplify
  "SLOT", # flake8-slots
  "TID", # flake8-tidy-imports
  "TD", # flake8-todos
  "TC", # flake8-type-checking
  "ARG", # flake8-unused-arguments
  "PTH", # flake8-use-pathlib
  "FLY", # flynt
  "I", # isort
  "NPY", # NumPy-specific rules
  "PD", # pandas-vet
  "N", # pep8-naming
  "PERF", # Perflint
  "E", # pycodestyle (errors)
  "W", # pycodestyle (warnings)
  "D", # pydocstyle
  "F", # Pyflakes
  "PGH", # pygrep-hooks
  "PL", # Pylint
  "UP", # pyupgrade
  "FURB", # refurb
  "RUF", # Ruff-specific rules
  "TRY", # tryceratops
]

ignore = [
  "PLR0913", # Too many arguments to function call
  "PLR0911", # Too many returns
  "PLR0912", # Too many branches
  "PLR0914", # Too many locals
  "PLR0915", # Too many statements
  "D203", # incorrect-blank-line-before-class
  "D212", # multi-line-summary-first-line 
  "COM812", # missing-trailing-coma 
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
  "S101", # assert
  "PLR2004", # magic-value-comparison
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pep8-naming]
extend-ignore-names = ["EC"]

[tool.ruff.format]
docstring-code-format = true
quote-style = "preserve"

[tool.black]
line-length = 79
target-version = ["py312"]

[tool.mypy]
python_version = "3.12"
strict = true
ignore_missing_imports = true
warn_unused_configs = true
warn_unused_ignores = true
warn_return_any = true
show_error_codes = true
pretty = true
exclude = "^venv/"

[tool.isort]
profile = "black"
